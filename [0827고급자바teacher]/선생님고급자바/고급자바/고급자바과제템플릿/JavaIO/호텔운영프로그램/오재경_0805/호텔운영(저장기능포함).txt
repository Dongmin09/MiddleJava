package kr.or.ddit.basic.example;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class HotelTest {
	private Scanner scan;
	private static Map<String, HotelVO> hotelMap;

	public HotelTest() {
		scan = new Scanner(System.in);
		hotelMap = new HashMap<>();
	}

	// 프로그램 시작
	public void hotelOpen() throws FileNotFoundException, IOException {
		System.out.println("*******************************");
		System.out.println("\t호텔 문을 열었습니다.\t");
		System.out.println("*******************************");
		newFile();
		while (true) {
			System.out.println("************************************");
			System.out.println("어떤 업무를 하시겠습니까?");
			System.out.println("1.체크인    2.체크아웃     3.객실상태     4.업무종료");
			System.out.println("************************************");
			System.out.println();
			int menuNum = scan.nextInt(); // 메뉴 번호 입력
			scan.nextLine();
			switch (menuNum) {
			case 1:
				checkIn(); // 체크인
				break;
			case 2:
				checkOut(); // 체크아웃
				break;
			case 3:
				roomState(); // 객실상태
				break;
			case 4:
				System.out.println("프로그램 저장 및 종료 ...");
				close();	//프로그램 수행시 처리한 정보를 종료시 bin 파일에 저장해주는 기능 
				System.exit(0);//프로그램 종료
			default:
				System.out.println("잘못 입력했습니다. 다시입력하세요.");
			} // switch문
		} // while문
	}
	private static void close() {
		try {
			ObjectOutputStream oos = new ObjectOutputStream(
					new BufferedOutputStream(
							new FileOutputStream("d:/D_Other/roomState.bin")));
			oos.writeObject(hotelMap);				
			oos.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	/**
	 * 고객 정보를 삭제하는 메서드
	 */
	private void checkOut() {
		System.out.println();
		System.out.println("어느 방을 체크아웃 하시겠습니까?");
		System.out.print("객실 번호 >> ");
		String rNum = scan.next();
		if (hotelMap.remove(rNum) == null) {
			System.out.println(rNum + " 번 방에 사용 중인 고객님은 없습니다.");
		} else {
			System.out.println("체크아웃하셨습니다. 저희 호텔을 이용해주셔서 감사합니다.");
			System.out.println("좋은 하루 되십시오. 고객님.");
		}
	}

	/*
	 * 고객 정보 출력
	 */
	private void roomState() {
		//hotelMap에 담긴 정보를 모두 출력 하여야 해서 keySet키의  iterator()메서드로 모든 키를 받아온다.
		Set<String> keySet = hotelMap.keySet();
		System.out.println("=====================================================");
		if(keySet.size()==0) {	//keySet의 size()메서드로 저장된 값이 있는지 확인  'keySet.size()==0'이면 저장된 정보가 없음.			
			System.out.println("체크인 한 사람이 아무도 없습니다.");
		}else {
			//Set의 데이터를 가져오기 위해 Iterator객체를 얻어와야한다.
			// => Set의 iterator() 메서드를 호출하면 된다.
			Iterator<String> it = keySet.iterator();
			System.out.println("▼ 현재 객실 상태 ▼");
			//데이터 개수만큼 반복하기
			while (it.hasNext()) {//hasNext()메서드 => 포인터 다음 위치에 데이터가 있으면 true, 없으면 false를 반환한다
				String rNum =it.next();	//next()메서드 => 포인터 다음 자료위치로 이동하고, 이동한 위치의 자료를 반환한다.
				HotelVO h = hotelMap.get(rNum);	//it.next로 반환 받은 rNum(방번호)를 키로 hotelMap에서 get으로 갖고와 h변수에 저장
				System.out.println(h.getName()+"님이  "+h.getrNum()+"호에 체크인 되었습니다.");
			}
		}
		System.out.println("=====================================================\n\n");
		
	}

	/*
	 * 새로운 고객 정보를 등록 메서드
	 */
	private void checkIn() throws FileNotFoundException, IOException {
		System.out.println();
		System.out.println("어느 방에 체크인 하시겠습니까?");
		System.out.print("방 번호 입력 => ");
		String rNum = scan.next();
		if (hotelMap.get(rNum) != null) {
			System.out.println("풀방 이므로 다른방 이용 부탁드려요");
			return;
		}

		scan.nextLine();
		System.out.println("성함이 어떻게 되십니까?");
		System.out.print("이름 입력 => ");
		String name = scan.next();

		hotelMap.put(rNum, new HotelVO(rNum, name));
		System.out.println(name + " 님 체크인 준비가 완료되었습니다.");
		
	}
			
	private static void receive()   {
		try {
			ObjectInputStream ois;
			ois = new ObjectInputStream(
					new BufferedInputStream(
					new FileInputStream("d:/D_Other/roomState.bin")));
		
			Object obj;
			
			while ((obj = ois.readObject())!=null) {
				hotelMap = (Map<String, HotelVO>)obj;	//케스팅 후에 저장 
			}
			ois.close();
			
		}catch (IOException e) {
	
		}catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
	private static void newFile() {
		File hotel = new File("d:/D_Other/roomState.bin");
		
		if(hotel.exists()) {	//roomState 있으면 그냥 리턴  
								//파일명.exists() 파일 존재 확인 하는 것 있으면 true
			return;
		}else {			//roomState 파일이 없으면 파일을 생성해줘야한다.
			
			try {
				ObjectOutputStream roomState = new ObjectOutputStream(
						new BufferedOutputStream(
						new FileOutputStream("d:/D_Other/roomState.bin")));
			}catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	public static void main(String[] args) throws FileNotFoundException, IOException {
		new HotelTest().hotelOpen();
	}

}

/**
 * 고객의 정보를 저장
 */
class HotelVO implements Serializable {
	private String roomNum;
	private String name;

	public HotelVO(String roomNum, String name) {
		super();
		this.name = name;
		this.roomNum = roomNum;
	}

	public String getrNum() {
		return roomNum;
	}

	public void setrNum(String rNum) {
		this.roomNum = rNum;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override
	public String toString() {
		return "호텔  객실번호=" + roomNum + ", 이름=" + name + "]";
	}
}
