package kr.or.ddit.basic.exam;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Hotel {
	private Scanner scan;
	private static Map<Integer, CheckIn> hotelCheck = new HashMap<>();
	



public Hotel() {
	scan = new Scanner(System.in);
//	HotelCheck = new HashMap<>();
	
}

// 메뉴를 출력하는 메서드
public void HotelMenu() {
	System.out.println();
	System.out.println("**************************");
	System.out.println("   호텔 문을 열었습니다.");
	System.out.println("**************************");
	System.out.println();
	System.out.println("*******************************");
	System.out.println("어떤 업무를 하시겠습니까?");
	System.out.println("1.체크인 2.체크아웃 3.객실상태 4.업무종료");
	System.out.println("*******************************");
}

// 프로그램을 시작하는 메서드
public void HotelMenuStart() {

	while (true) {

		HotelMenu(); // 메뉴 출력

		int menuNum = scan.nextInt(); // 메뉴 번호 입력

		switch (menuNum) {
		case 1:
			in(); // 체크인
			break;
		case 2:
			out(); // 체크아웃
			break;
		case 3:
			showRoom(); // 객실상태
			break;        
		case 4:

			System.out.println("**************************");
			System.out.println("   호텔 문을 닫았습니다.");
			System.out.println("**************************");
			return;
		default:
			System.out.println("잘못 입력했습니다. 다시입력하세요.");
		} // switch문
	} // while문
}

/**
 * 객실 체크인 메서드
 */
private void in() {
	System.out.println();
	System.out.println("어느방에 체크인 하시겠습니까?");
	System.out.print("방번호 입력 =>");
	int roomNum = scan.nextInt();

	// 이미 체크인된 방인지 검사
	// get()메서드로 값을 가져올 때 가져올 자료가 없으면 null을 반환한다.
	if (hotelCheck.get(roomNum) != null) {
		System.out.println(roomNum + "방은 이미 체크인된 방입니다.");
		return; // 메서드 종료
	}
	System.out.println("누구를 체크인 하시겠습니까? =>");
	String name = scan.next();

	hotelCheck.put(roomNum, new CheckIn(name, roomNum));
	System.out.println(roomNum + "방 체크인 되었습니다.");
}

/**
 * 객실 체크아웃 메서드
 */
private void out() {
	System.out.println();
	showRoom();
	System.out.println("어느방을 체크아웃 하시겠습니까?");
	System.out.print("방번호 입력 =>");
	int roomNum = scan.nextInt();

	// remove(key) => 삭제 성공하면 삭제된 value값을 반환하고, 실패하면 null을 반환함.
	if (hotelCheck.remove(roomNum) == null) {
		System.out.println(roomNum + "방은 체크인된 방이 아닙니다..");
	} else {
		System.out.println(roomNum + "방을 체크아웃 하였습니다.");
	}

}

/**
 * 객실 상태 메서드
 */
private void showRoom() {
	Set<Integer> keySet = hotelCheck.keySet();

	if (keySet.size() == 0) {
		System.out.println("등록된 체크인 정보가 없습니다.");
	} else {
		Iterator<Integer> it = keySet.iterator();


		while (it.hasNext()) {
			int roomNum = it.next(); // 키값
			CheckIn c = hotelCheck.get(roomNum);
			System.out.println(" " + "방번호:" + "\t" + c.getRoomNum() + "\t" + "투숙객:" + c.getName());
		}
	}
	System.out.println("*******************************");
	System.out.println("출력 완료.");
}

public static void main(String[] args) {

	ObjectInputStream ois = null;
	try {
		ois = new ObjectInputStream(
				new BufferedInputStream(
				new FileInputStream("d:/D_Other/Hotel.bin")));

		Object obj = null;		

		while(( obj = ois.readObject()) != null) {
			hotelCheck = (Map<Integer, CheckIn>) obj;
			
		
			
		}
	} catch (FileNotFoundException ex) {
		System.out.println("호텔 정보가 없습니다.");
	} catch (Exception e) {
	
	} finally {
		try {
			ois.close();
		} catch (Exception e) {
		}
	}
	new Hotel().HotelMenuStart();
	
	ObjectOutputStream oos = null;
	
	try {
		oos = new ObjectOutputStream(
				new BufferedOutputStream(
				new FileOutputStream("d:/D_Other/Hotel.bin")));
				
		oos.writeObject( (Object)hotelCheck);
		
		System.out.println("호텔 정보 쓰기 작업 완료");
		
	} catch (IOException e) {
		e.printStackTrace();
	} finally {
		try {
			oos.close();
		} catch (IOException e2) {
			e2.printStackTrace();
		}
	}

}
}

/**
 * 체크인 정보를 저장하기 위한 VO 클래스
 */
class CheckIn implements Serializable {
	private String name; // 이름
	private int roomNum; // 방번호   



	public CheckIn(String name, int roomNum) {
		super();
		this.name = name;
		this.roomNum = roomNum;
	}

	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getRoomNum() {
		return roomNum;
	}
	public void setRoomNum(int roomNum) {
		this.roomNum = roomNum;
	}

	@Override
	public String toString() {
		return "CheckIn [name=" + name + ", roomNum=" + roomNum + "]";
	}


}
