package practice;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class HorseTest {
	
	static int strRank = 1;
	
	public static void main(String[] args) {
		List<Horse> horse = new ArrayList<>();
		
			horse.add(new Horse("1번말"));
			horse.add(new Horse("2번말"));
			horse.add(new Horse("3번말")); 
			horse.add(new Horse("4번말")); 
			horse.add(new Horse("5번말"));
			horse.add(new Horse("6번말")); 
			horse.add(new Horse("7번말")); 
			horse.add(new Horse("8번말")); 
			horse.add(new Horse("9번말")); 
			horse.add(new Horse("10번말"));
		                                
		for(Horse hr : horse) {
			hr.start();
		}
		for(Horse hrs : horse) {
			try {
				hrs.join();
			}catch(InterruptedException e) {
				e.printStackTrace();
			}
		}
		
		Collections.sort(horse);
		System.out.println("경기 끝 !!");
		System.out.println("------------------------------------");
		System.out.println();
		System.out.println("경기 결과");
		
		for (Horse hr : horse) {
			System.out.println(hr.getName1() + " " + hr.getRank() + "등");
		}
	}

}

class Horse extends Thread implements Comparable<Horse> {
	private String name1;
	private int rank;
	

	public Horse(String name1) {
		this.name1 = name1;
	}

	
	public String getName1() {
		return name1;
	}



	public void setName1(String name1) {
		this.name1 = name1;
	}



	public int getRank() {
		return rank;
	}



	public void setRank(int rank) {
		this.rank = rank;
	}



	@Override
	public void run() {
		for (int i=1; i<=50; i++) {
			System.out.println("\n" + name1 + " : ");
			for (int j=0; j < i; j++) {
				System.out.print("-");
			}
			System.out.print(">");
			
			for(int j = 49; j > i; j--) {
				System.out.print("-");
			}
			
			System.out.println();
			System.out.println();
			System.out.println();
			
			try {
				Thread.sleep((int)(Math.random() * 500));
			}catch(InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println(name1 + "끝");
		
		setRank(HorseTest.strRank);
		HorseTest.strRank++;

	}

	@Override
	public String toString() {
		return "Horse [name=" + name1 + ", rank=" + rank + "]";
	}

	@Override
	public int compareTo(Horse horse) {
		if(rank < horse.getRank()) {
			return -1;
		}else {
			return 1;
		}
		
//		return new Integer (this.getRank().compareTo(horse.getRank()));
//		return Integer.compare(getRank(),horse.getRank());
	}

}
